<?php

namespace {{ namespace }};

use Illuminate\Support\Collection;
use Juampi92\Phecks\Domain\Contracts\Check;
use Juampi92\Phecks\Domain\DTOs\FileMatch;
use Juampi92\Phecks\Domain\Violations\Violation;
use Juampi92\Phecks\Domain\Violations\ViolationBuilder;

class {{ class }} implements Check
{
    private $source;

    public function __construct(
        $source
    ) {
        $this->source = $source;
    }

    /**
     * Use a Source to find matches.
     * You can filter, reject and
     *
     * @return MatchCollection
     */
    public function getMatches(): MatchCollection
    {
        return $this->source->run();
    }

    /**
     * Process here the output of the method getMatches.
     * This method must return an array of ViolationBuilder instances.
     * Ignore the match returning an empty array.
     *
     * @param mixed $match
     * @param FileMatch $file
     * @return array<ViolationBuilder>
     */
    public function processMatch($match, FileMatch $file): array
    {
        return [
            ViolationBuilder::make()->message('Explain the error here.');
        ];
    }
}
